
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router'
import Header from '../containers/Header';



const Page = ({data}) => {

  const {name,overview,genres} = data

    const router = useRouter()
    const imgurl = `https://image.tmdb.org/t/p/original${router.query.imgg}.jpg`
    const imgurlblur = `https://image.tmdb.org/t/p/w300${router.query.imgg}.jpg`
   
    



  return <div className='overflow-x-hidden h-screen w-screen relative overflow-y-hidden'>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

         
      <div className=' w-screen h-screen  flex  relative object-cover '>
          <Image src={imgurl}  layout='fill' objectFit='cover' blurDataURL={imgurlblur} placeholder="blur" alt='banner' />
          </div>

          <div className='bg-black/60 absolute top-0 h-screen w-screen bottom-0'/>

          <div className='absolute top-1/3 left-10 flex flex-col gap-4 z-[20] '>
            <div className="flex flex-col space-y-4">

            <h1 className='text-4xl text-yellow-600 drop-shadow-lg'>{name || data.title}</h1>
            <h1 className='text-base w-1/2'>{overview}</h1>
            </div>
           {genres?.length > 0 && <div className='flex space-x-4 text-sm items-center'>
              <h1 className='text-lg'>GENRE</h1>
              {genres [0] && <h1 className='bg-black/70 rounded-md p-2 shadow-red-800 shadow flex items-center '>{genres[0]?.name}</h1>}
              { genres[1] && <h1  className='bg-black/70 rounded-md p-2 shadow-red-800 shadow '>{genres[1]?.name}</h1>}

            </div>}



          </div>
          


        {/* {data.results.slice(0,1).map(i=>(
        

            <iframe key={i.id} width="1500" height="1000"
                src={`https://www.youtube.com/embed/${i.key}`}>
            </iframe>
          



        ))} */}

    
     
    
  </div>;
};

export default Page;


export async function getServerSideProps(context) {
    // const showid = context.query.page
    const showid = context.query.page
    const type =context.query.type.includes('show')


    // const data =  fetch(`https://image.tmdb.org/t/p/original${showid}.jpg`)
    // const getpageres = await fetch(`https://api.themoviedb.org/3/tv/${showid}/videos?api_key=${process.env.API_KEY}&language=en-US`)
    const getpageres = await fetch(`https://api.themoviedb.org/3/${type ? 'tv' : 'movie'}/${showid}?api_key=${process.env.API_KEY}&language=en-US`) 
    // await fetch(`https://api.themoviedb.org/3/movie/${showid}?api_key=${process.env.API_KEY}&language=en-US`)
    const data = await getpageres.json()
    

    return {
        props : {
            data,
            

        }
    }
}
